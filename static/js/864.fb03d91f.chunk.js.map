{"version":3,"file":"static/js/864.fb03d91f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactList/ContactList.styled.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/Searchbox.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import { Field, Form } from 'formik';\nimport styled from 'styled-components';\nexport const Forma = styled(Form)`\n  width: 350px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: ${props => props.theme.spacing.step * 5}px;\n  border: 4px solid ${({ color }) => color ?? '#fff'};\n  border-radius: ${props => props.theme.spacing.step * 4}px;\n  transition: transform 0.5s ${props => props.theme.animations.cubicBezier};\n  padding: 20px;\n  margin-top: ${props => props.theme.spacing.step * 10}px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Input = styled(Field)`\n  padding: ${props => props.theme.spacing.step * 2}px;\n  border: 4px solid transparent;\n  border-radius: ${props => props.theme.spacing.step * 4}px;\n  outline: none;\n  &:focus {\n    box-shadow: 0px 2px 10px 2px ${props => props.theme.colors.primary};\n  }\n`;\nexport const FormLabel = styled.label`\n  gap: ${props => props.theme.spacing.step * 1}px;\n  display: flex;\n  justify-content: space-between;\n  width: 300px;\n  align-items: center;\n`;\nexport const FormButton = styled.button`\n  border: 2px solid ${props => props.theme.colors.primary};\n  border-radius: ${props => props.theme.spacing.step * 4}px;\n  background-color: ${props => props.theme.colors.mainBackground};\n  color: ${props => props.theme.colors.primary};\n  font-weight: 500;\n  padding: ${props => props.theme.spacing.step * 1}px;\n  width: 150px;\n  font-size: ${props => props.theme.fontSizes.medium};\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.colors.primary};\n    box-shadow: 0px 2px 10px 2px ${props => props.theme.colors.primary};\n    color: ${props => props.theme.colors.dark};\n  }\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter.filter;\nexport const getIsEdited = state => state.contacts.isEdited;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { FormButton, Input, FormLabel, Forma } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    console.log(values);\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`contact with name ${name} is already in contacts`);\n      return;\n    }\n    if (contacts.find(contact => contact.number === number)) {\n      alert(`contact with number ${number} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(values));\n    resetForm();\n  };\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <Forma>\n            <FormLabel htmlFor=\"name\">\n              Name\n              <Input name=\"name\" />\n              {errors.name && touched.name ? <div>{errors.name}</div> : null}\n            </FormLabel>\n            <FormLabel htmlFor=\"number\">\n              Number\n              <Input name=\"number\" />\n              {errors.number && touched.number ? (\n                <div>{errors.number}</div>\n              ) : null}\n            </FormLabel>\n\n            <FormButton type=\"submit\">Submit</FormButton>\n          </Forma>\n        )}\n      </Formik>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nexport const ContactItem = styled.div`\n  width: 310px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: ${props => props.theme.spacing.step * 5}px;\n  border: 1px solid ${({ color }) => color ?? '#fff'};\n  border-radius: ${props => props.theme.spacing.step * 4}px;\n  transition: transform 0.5s ${props => props.theme.animations.cubicBezier};\n  padding: 5px;\n  margin-top: ${props => props.theme.spacing.step * 2}px;\n  font-size: ${props => props.theme.fontSizes.medium};\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.colors.primary};\n    box-shadow: 0px 2px 10px 2px ${props => props.theme.colors.dark};\n    color: ${props => props.theme.colors.dark};\n    border: 2px solid ${props => props.theme.colors.dark};\n  }\n`;\nexport const ContactButton = styled.button`\n  border: 2px solid ${props => props.theme.colors.light};\n  border-radius: ${props => props.theme.spacing.step * 3}px;\n  background-color: ${props => props.theme.colors.light};\n  color: ${props => props.theme.colors.dark};\n  font-weight: 500;\n  padding: ${props => props.theme.spacing.step * 1}px;\n  width: 60px;\n  font-size: ${props => props.theme.fontSizes.small};\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.colors.dark};\n    box-shadow: 0px 2px 10px 2px ${props => props.theme.colors.dark};\n    color: ${props => props.theme.colors.primary};\n    border: 2px solid ${props => props.theme.colors.dark};\n  }\n`;\nexport const NameField = styled.div`\n  width: 200px;\n  display: flex;\n  gap: 10px;\n  justify-content: space-around;\n`;\n","// import { EditingForm } from 'components/EditingForm/EditingForm';\n// import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n// import { getIsEdited } from 'redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { ContactButton, ContactItem, NameField } from './Contact.styled';\n\nexport const Contact = ({ contact }) => {\n  // const isEdited = useSelector(getIsEdited);\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n  // const handleEdite = () => {\n  //   console.log(isEdited);\n  // };\n  return (\n    <>\n      <ContactItem id={contact.id}>\n        <NameField>\n          <span>{contact.name} </span>\n          <span>{contact.number}</span>\n        </NameField>{' '}\n        {/* {!isEdited && <EditingForm />} */}\n        <ContactButton onClick={handleDelete}>Delete</ContactButton>\n        {/* <ContactButton onClick={handleEdite}>Edite</ContactButton> */}\n      </ContactItem>\n    </>\n  );\n};\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  list-style: none;\n  padding: 10px;\n  background-color: ${props => props.theme.colors.primary};\n  border: 4px solid ${({ color }) => color ?? '#fff'};\n  border-radius: ${props => props.theme.spacing.step * 4}px;\n  width: 350px;\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n  margin-top: ${props => props.theme.spacing.step * 10}px;\n`;\n","import styled from 'styled-components';\nexport const Box = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: ${props => props.theme.spacing.step * 5}px;\n  border: 2px solid ${({ color }) => color ?? '#fff'};\n  border-radius: ${props => props.theme.spacing.step * 4}px;\n  transition: transform 0.5s ${props => props.theme.animations.cubicBezier};\n  padding: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: ${props => props.theme.spacing.step * 5}px;\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.colors.primary};\n    box-shadow: 0px 2px 10px 2px ${props => props.theme.colors.dark};\n    color: ${props => props.theme.colors.dark};\n    border: 2px solid ${props => props.theme.colors.dark};\n  }\n`;\nexport const SearchLabel = styled.label`\n  gap: ${props => props.theme.spacing.step * 3}px;\n  display: flex;\n  justify-content: space-between;\n  width: 300px;\n  align-items: center;\n`;\nexport const SearchFilter = styled.input`\n  padding: ${props => props.theme.spacing.step * 2}px;\n  border: 4px solid transparent;\n  border-radius: ${props => props.theme.spacing.step * 4}px;\n  outline: none;\n`;\n","import { Box, SearchFilter, SearchLabel } from './SearchBox.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setContactsFilter } from '../../redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\n\nexport const SearchBox = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  console.log(filter);\n\n  const handleFilterChange = event =>\n    dispatch(setContactsFilter(event.target.value));\n  return (\n    <Box>\n      <SearchLabel htmlFor=\"filter\">\n        Find contacts by name\n        <SearchFilter\n          name=\"filter\"\n          type=\"text\"\n          // value={value}\n          onChange={handleFilterChange}\n        ></SearchFilter>\n      </SearchLabel>\n    </Box>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { List } from './ContactList.styled';\nimport { SearchBox } from 'components/SearchBox/Searchbox';\n// import { EditingForm } from 'components/EditingForm/EditingForm';\nconst getVisibleContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  return (\n    <List>\n      <SearchBox></SearchBox>\n      {/* <EditingForm></EditingForm> */}\n      {visibleContacts.map(contact => {\n        return (\n          <li key={contact.id}>\n            <Contact contact={contact} />\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\n// import { SearchBox } from 'components/SearchBox/Searchbox';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <h1>Here you can add or remote your contacts</h1>\n\n      <ContactForm></ContactForm>\n      {/* <SearchBox></SearchBox> */}\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["Forma","styled","Form","props","theme","spacing","step","color","animations","cubicBezier","Input","Field","colors","primary","FormLabel","FormButton","mainBackground","fontSizes","medium","dark","getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","SignupSchema","Yup","shape","name","min","max","required","number","ContactForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","resetForm","console","log","find","contact","toLowerCase","alert","addContact","errors","touched","htmlFor","type","ContactItem","ContactButton","light","small","NameField","Contact","id","onClick","deleteContact","List","Box","SearchLabel","SearchFilter","SearchBox","onChange","event","setContactsFilter","target","value","ContactList","visibleContacts","includes","getVisibleContacts","map","Contacts","useEffect","fetchContacts"],"sourceRoot":""}