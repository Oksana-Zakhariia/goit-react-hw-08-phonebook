{"version":3,"file":"static/js/864.58e5fb40.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/Searchbox.js","pages/Contacts.js"],"sourcesContent":["import { Field } from 'formik';\nimport styled from 'styled-components';\nexport const Input = styled(Field)`\n  padding: 10px;\n  box-shadow: ${props => props.theme.shadow};\n  border-radius: 10px;\n  border: 2px solid ${props => props.theme.colors.mainBorderColor};\n  outline: none;\n  margin-left: ${props => props.theme.spacing.large};\n`;\nexport const FormLabel = styled.label`\n  color: ${props => props.theme.colors.greyText};\n  font-size: ${props => props.theme.fonts.largeFontSize};\n  margin-right: auto;\n  margin-left: auto;\n  margin-right: ${props => props.theme.spacing.large};\n`;\nexport const FormButton = styled.button`\n  border: 2px solid ${props => props.theme.colors.mainBorderColor};\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter.filter;\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { FormButton, Input, FormLabel } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    console.log(values);\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`contact with name ${name} is already in contacts`);\n      return;\n    }\n    if (contacts.find(contact => contact.number === number)) {\n      alert(`contact with number ${number} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(values));\n    resetForm();\n  };\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <FormLabel htmlFor=\"name\">\n              Name\n              <Input name=\"name\" />\n              {errors.name && touched.name ? <div>{errors.name}</div> : null}\n            </FormLabel>\n            <FormLabel htmlFor=\"number\">\n              Number\n              <Input name=\"number\" />\n              {errors.number && touched.number ? (\n                <div>{errors.number}</div>\n              ) : null}\n            </FormLabel>\n\n            <FormButton type=\"submit\">Submit</FormButton>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nexport const ContactItem = styled.div`\n  border-radius: 10px;\n  border: 2px solid ${props => props.theme.colors.mainBorderColor};\n  color: ${props => props.theme.colors.greyText};\n  width: 800px;\n  padding: ${props => props.theme.spacing.small};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: ${props => props.theme.shadow};\n  margin-bottom: ${props => props.theme.spacing.small};\n`;\nexport const ContactButton = styled.button`\n  width: 100px;\n  padding: 5px;\n  background-color: ${props => props.theme.colors.mainBorderColor};\n  color: ${props => props.theme.colors.white};\n  border: 1px solid ${props => props.theme.colors.mainBorderColor};\n  border-radius: 5px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { ContactButton, ContactItem } from './Contact.styled';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n  return (\n    <ContactItem id={contact.id}>\n      <div>\n        <span>{contact.name} </span>\n        <span>{contact.number}</span>\n      </div>\n      <ContactButton onClick={handleDelete}>Delete</ContactButton>\n    </ContactItem>\n  );\n};\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0px;\n`;\n","import { useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { List } from './ContactList.styled';\nconst getVisibleContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  return (\n    <List>\n      {visibleContacts.map(contact => {\n        return (\n          <li key={contact.id}>\n            <Contact contact={contact} />\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nexport const InputLabel = styled.label`\n  color: ${props => props.theme.colors.greyText};\n  font-size: ${props => props.theme.fonts.largeFontSize};\n  margin-right: auto;\n  margin-left: auto;\n  display: flex;\n  gap: ${props => props.theme.spacing.small};\n  align-items: center;\n`;\nexport const Filter = styled.input`\n  padding: 10px;\n  box-shadow: ${props => props.theme.shadow};\n  border-radius: 10px;\n  border: 2px solid ${props => props.theme.colors.mainBorderColor};\n  outline: none;\n`;\n","import { Filter, InputLabel } from './SearchBox.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setContactsFilter } from '../../redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\n\nexport const SearchBox = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  console.log(filter);\n\n  const handleFilterChange = event =>\n    dispatch(setContactsFilter(event.target.value));\n  return (\n    <InputLabel htmlFor=\"filter\">\n      Find contacts by name\n      <Filter\n        name=\"filter\"\n        type=\"text\"\n        // value={value}\n        onChange={handleFilterChange}\n      ></Filter>\n    </InputLabel>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { SearchBox } from 'components/SearchBox/Searchbox';\n\nexport default function Contacts() {\n  return (\n    <div>\n      Contacts\n      <ContactForm></ContactForm>\n      <SearchBox></SearchBox>\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["Input","styled","Field","props","theme","shadow","colors","mainBorderColor","spacing","large","FormLabel","greyText","fonts","largeFontSize","FormButton","getContacts","state","contacts","items","getFilter","filter","SignupSchema","Yup","shape","name","min","max","required","number","ContactForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","resetForm","console","log","find","contact","toLowerCase","alert","addContact","errors","touched","htmlFor","type","ContactItem","small","ContactButton","white","Contact","id","onClick","deleteContact","List","ContactList","visibleContacts","includes","getVisibleContacts","map","InputLabel","Filter","SearchBox","onChange","event","setContactsFilter","target","value","Contacts"],"sourceRoot":""}